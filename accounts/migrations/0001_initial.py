# Generated by Django 3.0.8 on 2021-05-24 13:45

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=250, unique=True)),
                ('institution', models.CharField(choices=[('Abia', 'Abia State University'), ('Adamawa', 'Adamawa State University'), ('Adekunle', 'Adekunle Ajasin University'), ('Adeleke', 'Adeleke University'), ('Afe', 'Afe Babalola University'), ('Ahmadu', 'Ahmadu Bello University'), ('Ajayi', 'Ajayi Crowther University'), ('Akwa', 'Akwa Ibom State University'), ('Ambrose', 'Ambrose Alli University'), ('American', 'American University of Nigeria'), ('Anchor', 'Anchor University'), ('Arthur', 'Arthur Jarvis University'), ('Atiba', 'Atiba University'), ('Augustine', 'Augustine University'), ('Babcock', 'Babcock University'), ('Bauchi', 'Bauchi State University'), ('Bayero', 'Bayero University'), ('Baze', 'Baze University'), ('Bells', 'Bells University of Technology'), ('Benson', 'Benson Idahosa University'), ('Benue', 'Benue State University'), ('Bingham', 'Bingham University'), ('Borno', 'Borno State University'), ('Bowen', 'Bowen University'), ('Caleb', 'Caleb University'), ('Caritas', 'Caritas University'), ('Chrisland', 'Chrisland University'), ('Christopher', 'Christopher University'), ('Covenant', 'Covenant University'), ('Crawford', 'Crawford University'), ('Delta', 'Delta State University'), ('Elizade', 'Elizade University'), ('Hallmark', 'Hallmark University'), ('Landmark', 'Landmark University'), ('Mountain', 'Mountain Top University'), ('Nnamdi', 'Nnamdi Azikiwe University'), ('Obafemi', 'Obafemi Awolowo University'), ('Olabisi', 'Olabisi Onabanjo University'), ('Redeemers', 'Redeemers University'), ('Benin', 'University of Benin'), ('Ibadan', 'University of Ibadan'), ('Ilorin', 'University of Ilorin'), ('Nsukka', 'University of Nigeria Nsukka'), ('Port', 'University of Port Harcourt'), ('Others', 'Others')], max_length=100)),
                ('level', models.CharField(choices=[('Researcher', 'Researcher'), ('Professor', 'Professor'), ('Lecturer', 'Lecturer'), ('Student', 'Student'), ('Others', 'Others')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
